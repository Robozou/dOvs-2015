1 shift/reduce conflict

error:  state 13: shift/reduce conflict (shift LBRACK, reduce by rule 55)

state 0:

	program : . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	program	goto 131
	exp	goto 2
	lvalue	goto 1

	.	error


state 1:

	exp : lvalue .  (reduce by rule 4)
	exp : lvalue . ASSIGN exp 
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	LBRACK	shift 16
	DOT	shift 15
	ASSIGN	shift 14


	.	reduce by rule 4


state 2:

	program : exp .  (reduce by rule 0)
	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	CARET	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 0


state 3:

	exp : NIL .  (reduce by rule 2)



	.	reduce by rule 2


state 4:

	exp : BREAK .  (reduce by rule 11)



	.	reduce by rule 11


state 5:

	exp : LET . decls IN seqexp END 

	FUNCTION	shift 37
	VAR	shift 36
	TYPE	shift 35

	decl	goto 34
	decls	goto 33
	tydecl	goto 32
	vardecl	goto 31
	fundecl	goto 30

	.	error


state 6:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 38


	.	error


state 7:

	exp : WHILE . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 39
	lvalue	goto 1

	.	error


state 8:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 40
	lvalue	goto 1

	.	error


state 9:

	exp : MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 41
	lvalue	goto 1

	.	error


state 10:

	exp : LPAREN . seqexp RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 43
	seqexp	goto 42
	lvalue	goto 1

	.	reduce by rule 33


state 11:

	exp : STRING .  (reduce by rule 3)



	.	reduce by rule 3


state 12:

	exp : INT .  (reduce by rule 1)



	.	reduce by rule 1

error:  state 13: shift/reduce conflict (shift LBRACK, reduce by rule 55)

state 13:

	exp : ID . LBRACK exp RBRACK OF exp 
	exp : ID . LBRACE recfields RBRACE 
	exp : ID . LPAREN exps RPAREN 
	lvalue : ID .  (reduce by rule 55)
	lvalue : ID . LBRACK exp RBRACK 

	LPAREN	shift 46
	LBRACK	shift 45
	LBRACE	shift 44


	.	reduce by rule 55


state 14:

	exp : lvalue ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 47
	lvalue	goto 1

	.	error


state 15:

	lvalue : lvalue DOT . ID 

	ID	shift 48


	.	error


state 16:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 49
	lvalue	goto 1

	.	error


state 17:

	exp : exp OR . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 50
	lvalue	goto 1

	.	error


state 18:

	exp : exp AND . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 51
	lvalue	goto 1

	.	error


state 19:

	exp : exp CARET . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 52
	lvalue	goto 1

	.	error


state 20:

	exp : exp GE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 53
	lvalue	goto 1

	.	error


state 21:

	exp : exp GT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 54
	lvalue	goto 1

	.	error


state 22:

	exp : exp LE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 55
	lvalue	goto 1

	.	error


state 23:

	exp : exp LT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 56
	lvalue	goto 1

	.	error


state 24:

	exp : exp NEQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 57
	lvalue	goto 1

	.	error


state 25:

	exp : exp EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 58
	lvalue	goto 1

	.	error


state 26:

	exp : exp DIVIDE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 59
	lvalue	goto 1

	.	error


state 27:

	exp : exp TIMES . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 60
	lvalue	goto 1

	.	error


state 28:

	exp : exp MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 61
	lvalue	goto 1

	.	error


state 29:

	exp : exp PLUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 62
	lvalue	goto 1

	.	error


state 30:

	decl : fundecl .  (reduce by rule 41)



	.	reduce by rule 41


state 31:

	decl : vardecl .  (reduce by rule 40)



	.	reduce by rule 40


state 32:

	decl : tydecl .  (reduce by rule 39)



	.	reduce by rule 39


state 33:

	exp : LET decls . IN seqexp END 

	IN	shift 63


	.	error


state 34:

	decls : decl .  (reduce by rule 42)
	decls : decl . decls 

	FUNCTION	shift 37
	VAR	shift 36
	TYPE	shift 35

	decl	goto 34
	decls	goto 64
	tydecl	goto 32
	vardecl	goto 31
	fundecl	goto 30

	.	reduce by rule 42


state 35:

	tydecl : TYPE . ID EQ ty 

	ID	shift 65


	.	error


state 36:

	vardecl : VAR . ID ASSIGN exp 
	vardecl : VAR . ID COLON ID ASSIGN exp 

	ID	shift 66


	.	error


state 37:

	fundecl : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundecl : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 67


	.	error


state 38:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 68


	.	error


state 39:

	exp : WHILE exp . DO exp 
	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	CARET	shift 19
	AND	shift 18
	OR	shift 17
	DO	shift 69


	.	error


state 40:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	CARET	shift 19
	AND	shift 18
	OR	shift 17
	THEN	shift 70


	.	error


state 41:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	exp : MINUS exp .  (reduce by rule 29)



	.	reduce by rule 29


state 42:

	exp : LPAREN seqexp . RPAREN 
	seqexp : seqexp . SEMICOLON exp 

	SEMICOLON	shift 72
	RPAREN	shift 71


	.	error


state 43:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	seqexp : exp .  (reduce by rule 34)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	CARET	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 34


state 44:

	exp : ID LBRACE . recfields RBRACE 

	ID	shift 74

	recfields	goto 73

	.	reduce by rule 36


state 45:

	exp : ID LBRACK . exp RBRACK OF exp 
	lvalue : ID LBRACK . exp RBRACK 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 75
	lvalue	goto 1

	.	error


state 46:

	exp : ID LPAREN . exps RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 77
	exps	goto 76
	lvalue	goto 1

	.	reduce by rule 30


state 47:

	exp : lvalue ASSIGN exp .  (reduce by rule 5)
	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 5
	COMMA	reduce by rule 5
	SEMICOLON	reduce by rule 5
	RPAREN	reduce by rule 5
	RBRACK	reduce by rule 5
	RBRACE	reduce by rule 5
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	CARET	shift 19
	AND	reduce by rule 5
	OR	reduce by rule 5
	THEN	reduce by rule 5
	ELSE	reduce by rule 5
	TO	reduce by rule 5
	DO	reduce by rule 5
	IN	reduce by rule 5
	END	reduce by rule 5
	FUNCTION	reduce by rule 5
	VAR	reduce by rule 5
	TYPE	reduce by rule 5


	.	error


state 48:

	lvalue : lvalue DOT ID .  (reduce by rule 56)



	.	reduce by rule 56


state 49:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	lvalue : lvalue LBRACK exp . RBRACK 

	RBRACK	shift 78
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	CARET	shift 19
	AND	shift 18
	OR	shift 17


	.	error


state 50:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 17)
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	CARET	shift 19


	.	reduce by rule 17


state 51:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 18)
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	CARET	shift 19


	.	reduce by rule 18


state 52:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	exp : exp CARET exp .  (reduce by rule 28)

	CARET	shift 19


	.	reduce by rule 28


state 53:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 20)
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 20
	COMMA	reduce by rule 20
	SEMICOLON	reduce by rule 20
	RPAREN	reduce by rule 20
	RBRACK	reduce by rule 20
	RBRACE	reduce by rule 20
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	CARET	shift 19
	AND	reduce by rule 20
	OR	reduce by rule 20
	THEN	reduce by rule 20
	ELSE	reduce by rule 20
	TO	reduce by rule 20
	DO	reduce by rule 20
	IN	reduce by rule 20
	END	reduce by rule 20
	FUNCTION	reduce by rule 20
	VAR	reduce by rule 20
	TYPE	reduce by rule 20


	.	error


state 54:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 22)
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 22
	COMMA	reduce by rule 22
	SEMICOLON	reduce by rule 22
	RPAREN	reduce by rule 22
	RBRACK	reduce by rule 22
	RBRACE	reduce by rule 22
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	CARET	shift 19
	AND	reduce by rule 22
	OR	reduce by rule 22
	THEN	reduce by rule 22
	ELSE	reduce by rule 22
	TO	reduce by rule 22
	DO	reduce by rule 22
	IN	reduce by rule 22
	END	reduce by rule 22
	FUNCTION	reduce by rule 22
	VAR	reduce by rule 22
	TYPE	reduce by rule 22


	.	error


state 55:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 19)
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 19
	COMMA	reduce by rule 19
	SEMICOLON	reduce by rule 19
	RPAREN	reduce by rule 19
	RBRACK	reduce by rule 19
	RBRACE	reduce by rule 19
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	CARET	shift 19
	AND	reduce by rule 19
	OR	reduce by rule 19
	THEN	reduce by rule 19
	ELSE	reduce by rule 19
	TO	reduce by rule 19
	DO	reduce by rule 19
	IN	reduce by rule 19
	END	reduce by rule 19
	FUNCTION	reduce by rule 19
	VAR	reduce by rule 19
	TYPE	reduce by rule 19


	.	error


state 56:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 21)
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 21
	COMMA	reduce by rule 21
	SEMICOLON	reduce by rule 21
	RPAREN	reduce by rule 21
	RBRACK	reduce by rule 21
	RBRACE	reduce by rule 21
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	CARET	shift 19
	AND	reduce by rule 21
	OR	reduce by rule 21
	THEN	reduce by rule 21
	ELSE	reduce by rule 21
	TO	reduce by rule 21
	DO	reduce by rule 21
	IN	reduce by rule 21
	END	reduce by rule 21
	FUNCTION	reduce by rule 21
	VAR	reduce by rule 21
	TYPE	reduce by rule 21


	.	error


state 57:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 23)
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 23
	COMMA	reduce by rule 23
	SEMICOLON	reduce by rule 23
	RPAREN	reduce by rule 23
	RBRACK	reduce by rule 23
	RBRACE	reduce by rule 23
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	CARET	shift 19
	AND	reduce by rule 23
	OR	reduce by rule 23
	THEN	reduce by rule 23
	ELSE	reduce by rule 23
	TO	reduce by rule 23
	DO	reduce by rule 23
	IN	reduce by rule 23
	END	reduce by rule 23
	FUNCTION	reduce by rule 23
	VAR	reduce by rule 23
	TYPE	reduce by rule 23


	.	error


state 58:

	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 16)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 16
	COMMA	reduce by rule 16
	SEMICOLON	reduce by rule 16
	RPAREN	reduce by rule 16
	RBRACK	reduce by rule 16
	RBRACE	reduce by rule 16
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	CARET	shift 19
	AND	reduce by rule 16
	OR	reduce by rule 16
	THEN	reduce by rule 16
	ELSE	reduce by rule 16
	TO	reduce by rule 16
	DO	reduce by rule 16
	IN	reduce by rule 16
	END	reduce by rule 16
	FUNCTION	reduce by rule 16
	VAR	reduce by rule 16
	TYPE	reduce by rule 16


	.	error


state 59:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 26)
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	CARET	shift 19


	.	reduce by rule 26


state 60:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 27)
	exp : exp . CARET exp 

	CARET	shift 19


	.	reduce by rule 27


state 61:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 24)
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	TIMES	shift 27
	DIVIDE	shift 26
	CARET	shift 19


	.	reduce by rule 24


state 62:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 25)
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	TIMES	shift 27
	DIVIDE	shift 26
	CARET	shift 19


	.	reduce by rule 25


state 63:

	exp : LET decls IN . seqexp END 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 43
	seqexp	goto 79
	lvalue	goto 1

	.	reduce by rule 33


state 64:

	decls : decl decls .  (reduce by rule 43)



	.	reduce by rule 43


state 65:

	tydecl : TYPE ID . EQ ty 

	EQ	shift 80


	.	error


state 66:

	vardecl : VAR ID . ASSIGN exp 
	vardecl : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 82
	ASSIGN	shift 81


	.	error


state 67:

	fundecl : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundecl : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 83


	.	error


state 68:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 84
	lvalue	goto 1

	.	error


state 69:

	exp : WHILE exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 85
	lvalue	goto 1

	.	error


state 70:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 86
	lvalue	goto 1

	.	error


state 71:

	exp : LPAREN seqexp RPAREN .  (reduce by rule 13)



	.	reduce by rule 13


state 72:

	seqexp : seqexp SEMICOLON . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 87
	lvalue	goto 1

	.	error


state 73:

	exp : ID LBRACE recfields . RBRACE 

	RBRACE	shift 88


	.	error


state 74:

	recfields : ID . EQ exp 
	recfields : ID . EQ exp COMMA recfields 

	EQ	shift 89


	.	error


state 75:

	exp : ID LBRACK exp . RBRACK OF exp 
	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	lvalue : ID LBRACK exp . RBRACK 

	RBRACK	shift 90
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	CARET	shift 19
	AND	shift 18
	OR	shift 17


	.	error


state 76:

	exp : ID LPAREN exps . RPAREN 
	exps : exps . COMMA exp 

	COMMA	shift 92
	RPAREN	shift 91


	.	error


state 77:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	exps : exp .  (reduce by rule 31)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	CARET	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 31


state 78:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 57)



	.	reduce by rule 57


state 79:

	exp : LET decls IN seqexp . END 
	seqexp : seqexp . SEMICOLON exp 

	SEMICOLON	shift 72
	END	shift 93


	.	error


state 80:

	tydecl : TYPE ID EQ . ty 

	ID	shift 97
	LBRACE	shift 96
	ARRAY	shift 95

	ty	goto 94

	.	error


state 81:

	vardecl : VAR ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 98
	lvalue	goto 1

	.	error


state 82:

	vardecl : VAR ID COLON . ID ASSIGN exp 

	ID	shift 99


	.	error


state 83:

	fundecl : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundecl : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 101

	tyfields	goto 100

	.	reduce by rule 48


state 84:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	CARET	shift 19
	AND	shift 18
	OR	shift 17
	TO	shift 102


	.	error


state 85:

	exp : WHILE exp DO exp .  (reduce by rule 9)
	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 9
	COMMA	reduce by rule 9
	SEMICOLON	reduce by rule 9
	RPAREN	reduce by rule 9
	RBRACK	reduce by rule 9
	RBRACE	reduce by rule 9
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	CARET	shift 19
	AND	reduce by rule 9
	OR	reduce by rule 9
	THEN	reduce by rule 9
	ELSE	reduce by rule 9
	TO	reduce by rule 9
	DO	reduce by rule 9
	IN	reduce by rule 9
	END	reduce by rule 9
	FUNCTION	reduce by rule 9
	VAR	reduce by rule 9
	TYPE	reduce by rule 9


	.	error


state 86:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 8)
	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 8
	COMMA	reduce by rule 8
	SEMICOLON	reduce by rule 8
	RPAREN	reduce by rule 8
	RBRACK	reduce by rule 8
	RBRACE	reduce by rule 8
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	CARET	shift 19
	AND	reduce by rule 8
	OR	reduce by rule 8
	THEN	reduce by rule 8
	ELSE	shift 103
	TO	reduce by rule 8
	DO	reduce by rule 8
	IN	reduce by rule 8
	END	reduce by rule 8
	FUNCTION	reduce by rule 8
	VAR	reduce by rule 8
	TYPE	reduce by rule 8


	.	error


state 87:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	seqexp : seqexp SEMICOLON exp .  (reduce by rule 35)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	CARET	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 35


state 88:

	exp : ID LBRACE recfields RBRACE .  (reduce by rule 14)



	.	reduce by rule 14


state 89:

	recfields : ID EQ . exp 
	recfields : ID EQ . exp COMMA recfields 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 104
	lvalue	goto 1

	.	error


state 90:

	exp : ID LBRACK exp RBRACK . OF exp 
	lvalue : ID LBRACK exp RBRACK .  (reduce by rule 58)

	OF	shift 105


	.	reduce by rule 58


state 91:

	exp : ID LPAREN exps RPAREN .  (reduce by rule 15)



	.	reduce by rule 15


state 92:

	exps : exps COMMA . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 106
	lvalue	goto 1

	.	error


state 93:

	exp : LET decls IN seqexp END .  (reduce by rule 12)



	.	reduce by rule 12


state 94:

	tydecl : TYPE ID EQ ty .  (reduce by rule 44)



	.	reduce by rule 44


state 95:

	ty : ARRAY . OF ID 

	OF	shift 107


	.	error


state 96:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 101

	tyfields	goto 108

	.	reduce by rule 48


state 97:

	ty : ID .  (reduce by rule 45)



	.	reduce by rule 45


state 98:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	vardecl : VAR ID ASSIGN exp .  (reduce by rule 51)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	CARET	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 51


state 99:

	vardecl : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 109


	.	error


state 100:

	fundecl : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundecl : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 110


	.	error


state 101:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID COMMA tyfields 

	COLON	shift 111


	.	error


state 102:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 112
	lvalue	goto 1

	.	error


state 103:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 113
	lvalue	goto 1

	.	error


state 104:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	recfields : ID EQ exp .  (reduce by rule 37)
	recfields : ID EQ exp . COMMA recfields 

	COMMA	shift 114
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	CARET	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 37


state 105:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 115
	lvalue	goto 1

	.	error


state 106:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	exps : exps COMMA exp .  (reduce by rule 32)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	CARET	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 32


state 107:

	ty : ARRAY OF . ID 

	ID	shift 116


	.	error


state 108:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 117


	.	error


state 109:

	vardecl : VAR ID COLON ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 118
	lvalue	goto 1

	.	error


state 110:

	fundecl : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundecl : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 120
	EQ	shift 119


	.	error


state 111:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID COMMA tyfields 

	ID	shift 121


	.	error


state 112:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	CARET	shift 19
	AND	shift 18
	OR	shift 17
	DO	shift 122


	.	error


state 113:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 7)
	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	CARET	shift 19


	.	reduce by rule 7


state 114:

	recfields : ID EQ exp COMMA . recfields 

	ID	shift 74

	recfields	goto 123

	.	reduce by rule 36


state 115:

	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 6)
	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 6
	COMMA	reduce by rule 6
	SEMICOLON	reduce by rule 6
	RPAREN	reduce by rule 6
	RBRACK	reduce by rule 6
	RBRACE	reduce by rule 6
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	CARET	shift 19
	AND	reduce by rule 6
	OR	reduce by rule 6
	THEN	reduce by rule 6
	ELSE	reduce by rule 6
	TO	reduce by rule 6
	DO	reduce by rule 6
	IN	reduce by rule 6
	END	reduce by rule 6
	FUNCTION	reduce by rule 6
	VAR	reduce by rule 6
	TYPE	reduce by rule 6


	.	error


state 116:

	ty : ARRAY OF ID .  (reduce by rule 47)



	.	reduce by rule 47


state 117:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 46)



	.	reduce by rule 46


state 118:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	vardecl : VAR ID COLON ID ASSIGN exp .  (reduce by rule 52)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	CARET	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 52


state 119:

	fundecl : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 124
	lvalue	goto 1

	.	error


state 120:

	fundecl : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 125


	.	error


state 121:

	tyfields : ID COLON ID .  (reduce by rule 49)
	tyfields : ID COLON ID . COMMA tyfields 

	COMMA	shift 126


	.	reduce by rule 49


state 122:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 127
	lvalue	goto 1

	.	error


state 123:

	recfields : ID EQ exp COMMA recfields .  (reduce by rule 38)



	.	reduce by rule 38


state 124:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	fundecl : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 53)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	CARET	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 53


state 125:

	fundecl : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 128


	.	error


state 126:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 101

	tyfields	goto 129

	.	reduce by rule 48


state 127:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 10)
	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 10
	COMMA	reduce by rule 10
	SEMICOLON	reduce by rule 10
	RPAREN	reduce by rule 10
	RBRACK	reduce by rule 10
	RBRACE	reduce by rule 10
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	CARET	shift 19
	AND	reduce by rule 10
	OR	reduce by rule 10
	THEN	reduce by rule 10
	ELSE	reduce by rule 10
	TO	reduce by rule 10
	DO	reduce by rule 10
	IN	reduce by rule 10
	END	reduce by rule 10
	FUNCTION	reduce by rule 10
	VAR	reduce by rule 10
	TYPE	reduce by rule 10


	.	error


state 128:

	fundecl : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 130
	lvalue	goto 1

	.	error


state 129:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 50)



	.	reduce by rule 50


state 130:

	exp : exp . EQ exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	fundecl : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 54)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	CARET	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 54


state 131:


	EOF	accept


	.	error

577 of 1086 action table entries left after compaction
94 goto table entries
