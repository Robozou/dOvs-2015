2 shift/reduce conflicts

error:  state 31: shift/reduce conflict (shift FUNCTION, reduce by rule 41)
error:  state 34: shift/reduce conflict (shift TYPE, reduce by rule 39)

state 0:

	program : . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	program	goto 138
	exp	goto 3
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 1:

	lvalue : lvalue_p .  (reduce by rule 60)
	lvalue_p : lvalue_p . DOT ID 
	lvalue_p : lvalue_p . LBRACK exp RBRACK 

	LBRACK	shift 16
	DOT	shift 15


	.	reduce by rule 60


state 2:

	exp : lvalue .  (reduce by rule 4)
	exp : lvalue . ASSIGN exp 

	ASSIGN	shift 17


	.	reduce by rule 4


state 3:

	program : exp .  (reduce by rule 0)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	CARET	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 0


state 4:

	exp : NIL .  (reduce by rule 2)



	.	reduce by rule 2


state 5:

	exp : BREAK .  (reduce by rule 11)



	.	reduce by rule 11


state 6:

	exp : LET . decls IN seqexp END 

	FUNCTION	shift 40
	VAR	shift 39
	TYPE	shift 38

	decl	goto 37
	decls	goto 36
	tydecl	goto 35
	tydecls	goto 34
	vardecl	goto 33
	fundecl	goto 32
	fundecls	goto 31

	.	reduce by rule 42


state 7:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 41


	.	error


state 8:

	exp : WHILE . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 42
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 9:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 43
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 10:

	exp : MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 44
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 11:

	exp : LPAREN . seqexp RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 46
	seqexp	goto 45
	lvalue	goto 2
	lvalue_p	goto 1

	.	reduce by rule 33


state 12:

	exp : STRING .  (reduce by rule 3)



	.	reduce by rule 3


state 13:

	exp : INT .  (reduce by rule 1)



	.	reduce by rule 1


state 14:

	exp : ID . LBRACK exp RBRACK OF exp 
	exp : ID . LBRACE recfields RBRACE 
	exp : ID . LPAREN exps RPAREN 
	lvalue : ID .  (reduce by rule 59)
	lvalue_p : ID . DOT ID 
	lvalue_p : ID . LBRACK exp RBRACK 

	LPAREN	shift 50
	LBRACK	shift 49
	LBRACE	shift 48
	DOT	shift 47


	.	reduce by rule 59


state 15:

	lvalue_p : lvalue_p DOT . ID 

	ID	shift 51


	.	error


state 16:

	lvalue_p : lvalue_p LBRACK . exp RBRACK 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 52
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 17:

	exp : lvalue ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 53
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 18:

	exp : exp OR . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 54
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 19:

	exp : exp AND . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 55
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 20:

	exp : exp CARET . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 56
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 21:

	exp : exp GE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 57
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 22:

	exp : exp GT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 58
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 23:

	exp : exp LE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 59
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 24:

	exp : exp LT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 60
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 25:

	exp : exp NEQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 61
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 26:

	exp : exp EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 62
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 27:

	exp : exp DIVIDE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 63
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 28:

	exp : exp TIMES . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 64
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 29:

	exp : exp MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 65
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 30:

	exp : exp PLUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 66
	lvalue	goto 2
	lvalue_p	goto 1

	.	error

error:  state 31: shift/reduce conflict (shift FUNCTION, reduce by rule 41)

state 31:

	decl : fundecls .  (reduce by rule 41)
	fundecls : fundecls . fundecl 

	FUNCTION	shift 40

	fundecl	goto 67

	.	reduce by rule 41


state 32:

	fundecls : fundecl .  (reduce by rule 57)



	.	reduce by rule 57


state 33:

	decl : vardecl .  (reduce by rule 40)



	.	reduce by rule 40

error:  state 34: shift/reduce conflict (shift TYPE, reduce by rule 39)

state 34:

	decl : tydecls .  (reduce by rule 39)
	tydecls : tydecls . tydecl 

	TYPE	shift 38

	tydecl	goto 68

	.	reduce by rule 39


state 35:

	tydecls : tydecl .  (reduce by rule 45)



	.	reduce by rule 45


state 36:

	exp : LET decls . IN seqexp END 

	IN	shift 69


	.	error


state 37:

	decls : decl . decls 

	FUNCTION	shift 40
	VAR	shift 39
	TYPE	shift 38

	decl	goto 37
	decls	goto 70
	tydecl	goto 35
	tydecls	goto 34
	vardecl	goto 33
	fundecl	goto 32
	fundecls	goto 31

	.	reduce by rule 42


state 38:

	tydecl : TYPE . ID EQ ty 

	ID	shift 71


	.	error


state 39:

	vardecl : VAR . ID ASSIGN exp 
	vardecl : VAR . ID COLON ID ASSIGN exp 

	ID	shift 72


	.	error


state 40:

	fundecl : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundecl : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 73


	.	error


state 41:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 74


	.	error


state 42:

	exp : WHILE exp . DO exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	CARET	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 75


	.	error


state 43:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	CARET	shift 20
	AND	shift 19
	OR	shift 18
	THEN	shift 76


	.	error


state 44:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	exp : MINUS exp .  (reduce by rule 29)



	.	reduce by rule 29


state 45:

	exp : LPAREN seqexp . RPAREN 
	seqexp : seqexp . SEMICOLON exp 

	SEMICOLON	shift 78
	RPAREN	shift 77


	.	error


state 46:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	seqexp : exp .  (reduce by rule 34)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	CARET	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 34


state 47:

	lvalue_p : ID DOT . ID 

	ID	shift 79


	.	error


state 48:

	exp : ID LBRACE . recfields RBRACE 

	ID	shift 81

	recfields	goto 80

	.	reduce by rule 36


state 49:

	exp : ID LBRACK . exp RBRACK OF exp 
	lvalue_p : ID LBRACK . exp RBRACK 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 82
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 50:

	exp : ID LPAREN . exps RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 84
	exps	goto 83
	lvalue	goto 2
	lvalue_p	goto 1

	.	reduce by rule 30


state 51:

	lvalue_p : lvalue_p DOT ID .  (reduce by rule 62)



	.	reduce by rule 62


state 52:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	lvalue_p : lvalue_p LBRACK exp . RBRACK 

	RBRACK	shift 85
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	CARET	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 53:

	exp : lvalue ASSIGN exp .  (reduce by rule 5)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 5
	COMMA	reduce by rule 5
	SEMICOLON	reduce by rule 5
	RPAREN	reduce by rule 5
	RBRACK	reduce by rule 5
	RBRACE	reduce by rule 5
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	CARET	shift 20
	AND	reduce by rule 5
	OR	reduce by rule 5
	THEN	reduce by rule 5
	ELSE	reduce by rule 5
	TO	reduce by rule 5
	DO	reduce by rule 5
	IN	reduce by rule 5
	END	reduce by rule 5
	FUNCTION	reduce by rule 5
	VAR	reduce by rule 5
	TYPE	reduce by rule 5


	.	error


state 54:

	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 16)
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	CARET	shift 20


	.	reduce by rule 16


state 55:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 17)
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	CARET	shift 20


	.	reduce by rule 17


state 56:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	exp : exp CARET exp .  (reduce by rule 28)

	CARET	shift 20


	.	reduce by rule 28


state 57:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 20)
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 20
	COMMA	reduce by rule 20
	SEMICOLON	reduce by rule 20
	RPAREN	reduce by rule 20
	RBRACK	reduce by rule 20
	RBRACE	reduce by rule 20
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	CARET	shift 20
	AND	reduce by rule 20
	OR	reduce by rule 20
	THEN	reduce by rule 20
	ELSE	reduce by rule 20
	TO	reduce by rule 20
	DO	reduce by rule 20
	IN	reduce by rule 20
	END	reduce by rule 20
	FUNCTION	reduce by rule 20
	VAR	reduce by rule 20
	TYPE	reduce by rule 20


	.	error


state 58:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 22)
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 22
	COMMA	reduce by rule 22
	SEMICOLON	reduce by rule 22
	RPAREN	reduce by rule 22
	RBRACK	reduce by rule 22
	RBRACE	reduce by rule 22
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	CARET	shift 20
	AND	reduce by rule 22
	OR	reduce by rule 22
	THEN	reduce by rule 22
	ELSE	reduce by rule 22
	TO	reduce by rule 22
	DO	reduce by rule 22
	IN	reduce by rule 22
	END	reduce by rule 22
	FUNCTION	reduce by rule 22
	VAR	reduce by rule 22
	TYPE	reduce by rule 22


	.	error


state 59:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 19)
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 19
	COMMA	reduce by rule 19
	SEMICOLON	reduce by rule 19
	RPAREN	reduce by rule 19
	RBRACK	reduce by rule 19
	RBRACE	reduce by rule 19
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	CARET	shift 20
	AND	reduce by rule 19
	OR	reduce by rule 19
	THEN	reduce by rule 19
	ELSE	reduce by rule 19
	TO	reduce by rule 19
	DO	reduce by rule 19
	IN	reduce by rule 19
	END	reduce by rule 19
	FUNCTION	reduce by rule 19
	VAR	reduce by rule 19
	TYPE	reduce by rule 19


	.	error


state 60:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 21)
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 21
	COMMA	reduce by rule 21
	SEMICOLON	reduce by rule 21
	RPAREN	reduce by rule 21
	RBRACK	reduce by rule 21
	RBRACE	reduce by rule 21
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	CARET	shift 20
	AND	reduce by rule 21
	OR	reduce by rule 21
	THEN	reduce by rule 21
	ELSE	reduce by rule 21
	TO	reduce by rule 21
	DO	reduce by rule 21
	IN	reduce by rule 21
	END	reduce by rule 21
	FUNCTION	reduce by rule 21
	VAR	reduce by rule 21
	TYPE	reduce by rule 21


	.	error


state 61:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 23)
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 23
	COMMA	reduce by rule 23
	SEMICOLON	reduce by rule 23
	RPAREN	reduce by rule 23
	RBRACK	reduce by rule 23
	RBRACE	reduce by rule 23
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	CARET	shift 20
	AND	reduce by rule 23
	OR	reduce by rule 23
	THEN	reduce by rule 23
	ELSE	reduce by rule 23
	TO	reduce by rule 23
	DO	reduce by rule 23
	IN	reduce by rule 23
	END	reduce by rule 23
	FUNCTION	reduce by rule 23
	VAR	reduce by rule 23
	TYPE	reduce by rule 23


	.	error


state 62:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 18)
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 18
	COMMA	reduce by rule 18
	SEMICOLON	reduce by rule 18
	RPAREN	reduce by rule 18
	RBRACK	reduce by rule 18
	RBRACE	reduce by rule 18
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	CARET	shift 20
	AND	reduce by rule 18
	OR	reduce by rule 18
	THEN	reduce by rule 18
	ELSE	reduce by rule 18
	TO	reduce by rule 18
	DO	reduce by rule 18
	IN	reduce by rule 18
	END	reduce by rule 18
	FUNCTION	reduce by rule 18
	VAR	reduce by rule 18
	TYPE	reduce by rule 18


	.	error


state 63:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 26)
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	CARET	shift 20


	.	reduce by rule 26


state 64:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 27)
	exp : exp . CARET exp 

	CARET	shift 20


	.	reduce by rule 27


state 65:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 24)
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	TIMES	shift 28
	DIVIDE	shift 27
	CARET	shift 20


	.	reduce by rule 24


state 66:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 25)
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	TIMES	shift 28
	DIVIDE	shift 27
	CARET	shift 20


	.	reduce by rule 25


state 67:

	fundecls : fundecls fundecl .  (reduce by rule 58)



	.	reduce by rule 58


state 68:

	tydecls : tydecls tydecl .  (reduce by rule 46)



	.	reduce by rule 46


state 69:

	exp : LET decls IN . seqexp END 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 46
	seqexp	goto 86
	lvalue	goto 2
	lvalue_p	goto 1

	.	reduce by rule 33


state 70:

	decls : decl decls .  (reduce by rule 43)



	.	reduce by rule 43


state 71:

	tydecl : TYPE ID . EQ ty 

	EQ	shift 87


	.	error


state 72:

	vardecl : VAR ID . ASSIGN exp 
	vardecl : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 89
	ASSIGN	shift 88


	.	error


state 73:

	fundecl : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundecl : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 90


	.	error


state 74:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 91
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 75:

	exp : WHILE exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 92
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 76:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 93
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 77:

	exp : LPAREN seqexp RPAREN .  (reduce by rule 13)



	.	reduce by rule 13


state 78:

	seqexp : seqexp SEMICOLON . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 94
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 79:

	lvalue_p : ID DOT ID .  (reduce by rule 61)



	.	reduce by rule 61


state 80:

	exp : ID LBRACE recfields . RBRACE 

	RBRACE	shift 95


	.	error


state 81:

	recfields : ID . EQ exp 
	recfields : ID . EQ exp COMMA recfields 

	EQ	shift 96


	.	error


state 82:

	exp : ID LBRACK exp . RBRACK OF exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	lvalue_p : ID LBRACK exp . RBRACK 

	RBRACK	shift 97
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	CARET	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 83:

	exp : ID LPAREN exps . RPAREN 
	exps : exps . COMMA exp 

	COMMA	shift 99
	RPAREN	shift 98


	.	error


state 84:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	exps : exp .  (reduce by rule 31)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	CARET	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 31


state 85:

	lvalue_p : lvalue_p LBRACK exp RBRACK .  (reduce by rule 63)



	.	reduce by rule 63


state 86:

	exp : LET decls IN seqexp . END 
	seqexp : seqexp . SEMICOLON exp 

	SEMICOLON	shift 78
	END	shift 100


	.	error


state 87:

	tydecl : TYPE ID EQ . ty 

	ID	shift 104
	LBRACE	shift 103
	ARRAY	shift 102

	ty	goto 101

	.	error


state 88:

	vardecl : VAR ID ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 105
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 89:

	vardecl : VAR ID COLON . ID ASSIGN exp 

	ID	shift 106


	.	error


state 90:

	fundecl : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundecl : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 108

	tyfields	goto 107

	.	reduce by rule 50


state 91:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	CARET	shift 20
	AND	shift 19
	OR	shift 18
	TO	shift 109


	.	error


state 92:

	exp : WHILE exp DO exp .  (reduce by rule 9)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 9
	COMMA	reduce by rule 9
	SEMICOLON	reduce by rule 9
	RPAREN	reduce by rule 9
	RBRACK	reduce by rule 9
	RBRACE	reduce by rule 9
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	CARET	shift 20
	AND	reduce by rule 9
	OR	reduce by rule 9
	THEN	reduce by rule 9
	ELSE	reduce by rule 9
	TO	reduce by rule 9
	DO	reduce by rule 9
	IN	reduce by rule 9
	END	reduce by rule 9
	FUNCTION	reduce by rule 9
	VAR	reduce by rule 9
	TYPE	reduce by rule 9


	.	error


state 93:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 8)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 8
	COMMA	reduce by rule 8
	SEMICOLON	reduce by rule 8
	RPAREN	reduce by rule 8
	RBRACK	reduce by rule 8
	RBRACE	reduce by rule 8
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	CARET	shift 20
	AND	reduce by rule 8
	OR	reduce by rule 8
	THEN	reduce by rule 8
	ELSE	shift 110
	TO	reduce by rule 8
	DO	reduce by rule 8
	IN	reduce by rule 8
	END	reduce by rule 8
	FUNCTION	reduce by rule 8
	VAR	reduce by rule 8
	TYPE	reduce by rule 8


	.	error


state 94:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	seqexp : seqexp SEMICOLON exp .  (reduce by rule 35)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	CARET	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 35


state 95:

	exp : ID LBRACE recfields RBRACE .  (reduce by rule 14)



	.	reduce by rule 14


state 96:

	recfields : ID EQ . exp 
	recfields : ID EQ . exp COMMA recfields 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 111
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 97:

	exp : ID LBRACK exp RBRACK . OF exp 
	lvalue_p : ID LBRACK exp RBRACK .  (reduce by rule 64)

	OF	shift 112


	.	reduce by rule 64


state 98:

	exp : ID LPAREN exps RPAREN .  (reduce by rule 15)



	.	reduce by rule 15


state 99:

	exps : exps COMMA . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 113
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 100:

	exp : LET decls IN seqexp END .  (reduce by rule 12)



	.	reduce by rule 12


state 101:

	tydecl : TYPE ID EQ ty .  (reduce by rule 44)



	.	reduce by rule 44


state 102:

	ty : ARRAY . OF ID 

	OF	shift 114


	.	error


state 103:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 108

	tyfields	goto 115

	.	reduce by rule 50


state 104:

	ty : ID .  (reduce by rule 47)



	.	reduce by rule 47


state 105:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	vardecl : VAR ID ASSIGN exp .  (reduce by rule 53)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	CARET	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 53


state 106:

	vardecl : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 116


	.	error


state 107:

	fundecl : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundecl : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 117


	.	error


state 108:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID COMMA tyfields 

	COLON	shift 118


	.	error


state 109:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 119
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 110:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 120
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 111:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	recfields : ID EQ exp .  (reduce by rule 37)
	recfields : ID EQ exp . COMMA recfields 

	COMMA	shift 121
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	CARET	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 37


state 112:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 122
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 113:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	exps : exps COMMA exp .  (reduce by rule 32)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	CARET	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 32


state 114:

	ty : ARRAY OF . ID 

	ID	shift 123


	.	error


state 115:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 124


	.	error


state 116:

	vardecl : VAR ID COLON ID ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 125
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 117:

	fundecl : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundecl : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 127
	EQ	shift 126


	.	error


state 118:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID COMMA tyfields 

	ID	shift 128


	.	error


state 119:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	CARET	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 129


	.	error


state 120:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 7)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	CARET	shift 20


	.	reduce by rule 7


state 121:

	recfields : ID EQ exp COMMA . recfields 

	ID	shift 81

	recfields	goto 130

	.	reduce by rule 36


state 122:

	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 6)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 6
	COMMA	reduce by rule 6
	SEMICOLON	reduce by rule 6
	RPAREN	reduce by rule 6
	RBRACK	reduce by rule 6
	RBRACE	reduce by rule 6
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	CARET	shift 20
	AND	reduce by rule 6
	OR	reduce by rule 6
	THEN	reduce by rule 6
	ELSE	reduce by rule 6
	TO	reduce by rule 6
	DO	reduce by rule 6
	IN	reduce by rule 6
	END	reduce by rule 6
	FUNCTION	reduce by rule 6
	VAR	reduce by rule 6
	TYPE	reduce by rule 6


	.	error


state 123:

	ty : ARRAY OF ID .  (reduce by rule 49)



	.	reduce by rule 49


state 124:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 48)



	.	reduce by rule 48


state 125:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	vardecl : VAR ID COLON ID ASSIGN exp .  (reduce by rule 54)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	CARET	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 54


state 126:

	fundecl : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 131
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 127:

	fundecl : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 132


	.	error


state 128:

	tyfields : ID COLON ID .  (reduce by rule 51)
	tyfields : ID COLON ID . COMMA tyfields 

	COMMA	shift 133


	.	reduce by rule 51


state 129:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 134
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 130:

	recfields : ID EQ exp COMMA recfields .  (reduce by rule 38)



	.	reduce by rule 38


state 131:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	fundecl : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 55)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	CARET	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 55


state 132:

	fundecl : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 135


	.	error


state 133:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 108

	tyfields	goto 136

	.	reduce by rule 50


state 134:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 10)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 10
	COMMA	reduce by rule 10
	SEMICOLON	reduce by rule 10
	RPAREN	reduce by rule 10
	RBRACK	reduce by rule 10
	RBRACE	reduce by rule 10
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	CARET	shift 20
	AND	reduce by rule 10
	OR	reduce by rule 10
	THEN	reduce by rule 10
	ELSE	reduce by rule 10
	TO	reduce by rule 10
	DO	reduce by rule 10
	IN	reduce by rule 10
	END	reduce by rule 10
	FUNCTION	reduce by rule 10
	VAR	reduce by rule 10
	TYPE	reduce by rule 10


	.	error


state 135:

	fundecl : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 137
	lvalue	goto 2
	lvalue_p	goto 1

	.	error


state 136:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 52)



	.	reduce by rule 52


state 137:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	fundecl : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 56)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	CARET	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 56


state 138:


	EOF	accept


	.	error

578 of 1097 action table entries left after compaction
137 goto table entries
