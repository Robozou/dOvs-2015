
state 0:

	program : . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	program	goto 139
	exp	goto 2
	lvalue	goto 1

	.	error


state 1:

	exp : lvalue .  (reduce by rule 4)
	exp : lvalue . ASSIGN exp 

	ASSIGN	shift 14


	.	reduce by rule 4


state 2:

	program : exp .  (reduce by rule 0)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	EQ	shift 23
	NEQ	shift 22
	LT	shift 21
	LE	shift 20
	GT	shift 19
	GE	shift 18
	CARET	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 0


state 3:

	exp : NIL .  (reduce by rule 2)



	.	reduce by rule 2


state 4:

	exp : BREAK .  (reduce by rule 11)



	.	reduce by rule 11


state 5:

	exp : MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 28
	lvalue	goto 1

	.	error


state 6:

	exp : LET . decls IN seqexp_p END 

	FUNCTION	shift 38
	VAR	shift 37
	TYPE	shift 36

	decl	goto 35
	decls	goto 34
	tydecl	goto 33
	tydecls	goto 32
	vardecl	goto 31
	fundecl	goto 30
	fundecls	goto 29

	.	reduce by rule 43


state 7:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 39


	.	error


state 8:

	exp : WHILE . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 40
	lvalue	goto 1

	.	error


state 9:

	exp : IF . exp THEN exp 
	exp : IF . exp THEN exp ELSE exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 41
	lvalue	goto 1

	.	error


state 10:

	exp : LPAREN . seqexp RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 43
	seqexp	goto 42
	lvalue	goto 1

	.	error


state 11:

	exp : STRING .  (reduce by rule 3)



	.	reduce by rule 3


state 12:

	exp : INT .  (reduce by rule 1)



	.	reduce by rule 1


state 13:

	exp : ID . LBRACK exp RBRACK OF exp 
	exp : ID . LBRACE recfields RBRACE 
	exp : ID . LPAREN exps RPAREN 
	lvalue : ID . lvalue_p 

	LPAREN	shift 48
	LBRACK	shift 47
	LBRACE	shift 46
	DOT	shift 45

	lvalue_p	goto 44

	.	reduce by rule 61


state 14:

	exp : lvalue ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 49
	lvalue	goto 1

	.	error


state 15:

	exp : exp OR . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 50
	lvalue	goto 1

	.	error


state 16:

	exp : exp AND . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 51
	lvalue	goto 1

	.	error


state 17:

	exp : exp CARET . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 52
	lvalue	goto 1

	.	error


state 18:

	exp : exp GE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 53
	lvalue	goto 1

	.	error


state 19:

	exp : exp GT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 54
	lvalue	goto 1

	.	error


state 20:

	exp : exp LE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 55
	lvalue	goto 1

	.	error


state 21:

	exp : exp LT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 56
	lvalue	goto 1

	.	error


state 22:

	exp : exp NEQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 57
	lvalue	goto 1

	.	error


state 23:

	exp : exp EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 58
	lvalue	goto 1

	.	error


state 24:

	exp : exp DIVIDE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 59
	lvalue	goto 1

	.	error


state 25:

	exp : exp TIMES . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 60
	lvalue	goto 1

	.	error


state 26:

	exp : exp MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 61
	lvalue	goto 1

	.	error


state 27:

	exp : exp PLUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 62
	lvalue	goto 1

	.	error


state 28:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	exp : MINUS exp .  (reduce by rule 29)

	CARET	shift 17


	.	reduce by rule 29


state 29:

	decl : fundecls .  (reduce by rule 42)
	fundecls : fundecls . fundecl 


	fundecl	goto 63

	.	reduce by rule 42


state 30:

	fundecls : fundecl .  (reduce by rule 58)



	.	reduce by rule 58


state 31:

	decl : vardecl .  (reduce by rule 41)



	.	reduce by rule 41


state 32:

	decl : tydecls .  (reduce by rule 40)
	tydecls : tydecls . tydecl 


	tydecl	goto 64

	.	reduce by rule 40


state 33:

	tydecls : tydecl .  (reduce by rule 46)



	.	reduce by rule 46


state 34:

	exp : LET decls . IN seqexp_p END 

	IN	shift 65


	.	error


state 35:

	decls : decl . decls 

	FUNCTION	shift 38
	VAR	shift 37
	TYPE	shift 36

	decl	goto 35
	decls	goto 66
	tydecl	goto 33
	tydecls	goto 32
	vardecl	goto 31
	fundecl	goto 30
	fundecls	goto 29

	.	reduce by rule 43


state 36:

	tydecl : TYPE . ID EQ ty 

	ID	shift 67


	.	error


state 37:

	vardecl : VAR . ID ASSIGN exp 
	vardecl : VAR . ID COLON ID ASSIGN exp 

	ID	shift 68


	.	error


state 38:

	fundecl : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundecl : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 69


	.	error


state 39:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 70


	.	error


state 40:

	exp : WHILE exp . DO exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	DO	shift 71
	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	EQ	shift 23
	NEQ	shift 22
	LT	shift 21
	LE	shift 20
	GT	shift 19
	GE	shift 18
	CARET	shift 17
	AND	shift 16
	OR	shift 15


	.	error


state 41:

	exp : IF exp . THEN exp 
	exp : IF exp . THEN exp ELSE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	THEN	shift 72
	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	EQ	shift 23
	NEQ	shift 22
	LT	shift 21
	LE	shift 20
	GT	shift 19
	GE	shift 18
	CARET	shift 17
	AND	shift 16
	OR	shift 15


	.	error


state 42:

	exp : LPAREN seqexp . RPAREN 
	seqexp : seqexp . SEMICOLON exp 

	SEMICOLON	shift 74
	RPAREN	shift 73


	.	error


state 43:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	seqexp : exp .  (reduce by rule 33)

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	EQ	shift 23
	NEQ	shift 22
	LT	shift 21
	LE	shift 20
	GT	shift 19
	GE	shift 18
	CARET	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 33


state 44:

	lvalue : ID lvalue_p .  (reduce by rule 60)



	.	reduce by rule 60


state 45:

	lvalue_p : DOT . ID lvalue_p 

	ID	shift 75


	.	error


state 46:

	exp : ID LBRACE . recfields RBRACE 

	ID	shift 77

	recfields	goto 76

	.	reduce by rule 37


state 47:

	exp : ID LBRACK . exp RBRACK OF exp 
	lvalue_p : LBRACK . exp RBRACK lvalue_p 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 78
	lvalue	goto 1

	.	error


state 48:

	exp : ID LPAREN . exps RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 80
	exps	goto 79
	lvalue	goto 1

	.	reduce by rule 30


state 49:

	exp : lvalue ASSIGN exp .  (reduce by rule 5)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 5
	COMMA	reduce by rule 5
	SEMICOLON	reduce by rule 5
	RPAREN	reduce by rule 5
	RBRACK	reduce by rule 5
	RBRACE	reduce by rule 5
	THEN	reduce by rule 5
	ELSE	reduce by rule 5
	TO	reduce by rule 5
	DO	reduce by rule 5
	IN	reduce by rule 5
	END	reduce by rule 5
	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	CARET	shift 17
	AND	reduce by rule 5
	OR	reduce by rule 5
	FUNCTION	reduce by rule 5
	VAR	reduce by rule 5
	TYPE	reduce by rule 5


	.	error


state 50:

	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 16)
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	EQ	shift 23
	NEQ	shift 22
	LT	shift 21
	LE	shift 20
	GT	shift 19
	GE	shift 18
	CARET	shift 17


	.	reduce by rule 16


state 51:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 17)
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	EQ	shift 23
	NEQ	shift 22
	LT	shift 21
	LE	shift 20
	GT	shift 19
	GE	shift 18
	CARET	shift 17


	.	reduce by rule 17


state 52:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	exp : exp CARET exp .  (reduce by rule 28)

	CARET	shift 17


	.	reduce by rule 28


state 53:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 20)
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 20
	COMMA	reduce by rule 20
	SEMICOLON	reduce by rule 20
	RPAREN	reduce by rule 20
	RBRACK	reduce by rule 20
	RBRACE	reduce by rule 20
	THEN	reduce by rule 20
	ELSE	reduce by rule 20
	TO	reduce by rule 20
	DO	reduce by rule 20
	IN	reduce by rule 20
	END	reduce by rule 20
	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	CARET	shift 17
	AND	reduce by rule 20
	OR	reduce by rule 20
	FUNCTION	reduce by rule 20
	VAR	reduce by rule 20
	TYPE	reduce by rule 20


	.	error


state 54:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 22)
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 22
	COMMA	reduce by rule 22
	SEMICOLON	reduce by rule 22
	RPAREN	reduce by rule 22
	RBRACK	reduce by rule 22
	RBRACE	reduce by rule 22
	THEN	reduce by rule 22
	ELSE	reduce by rule 22
	TO	reduce by rule 22
	DO	reduce by rule 22
	IN	reduce by rule 22
	END	reduce by rule 22
	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	CARET	shift 17
	AND	reduce by rule 22
	OR	reduce by rule 22
	FUNCTION	reduce by rule 22
	VAR	reduce by rule 22
	TYPE	reduce by rule 22


	.	error


state 55:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 19)
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 19
	COMMA	reduce by rule 19
	SEMICOLON	reduce by rule 19
	RPAREN	reduce by rule 19
	RBRACK	reduce by rule 19
	RBRACE	reduce by rule 19
	THEN	reduce by rule 19
	ELSE	reduce by rule 19
	TO	reduce by rule 19
	DO	reduce by rule 19
	IN	reduce by rule 19
	END	reduce by rule 19
	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	CARET	shift 17
	AND	reduce by rule 19
	OR	reduce by rule 19
	FUNCTION	reduce by rule 19
	VAR	reduce by rule 19
	TYPE	reduce by rule 19


	.	error


state 56:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 21)
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 21
	COMMA	reduce by rule 21
	SEMICOLON	reduce by rule 21
	RPAREN	reduce by rule 21
	RBRACK	reduce by rule 21
	RBRACE	reduce by rule 21
	THEN	reduce by rule 21
	ELSE	reduce by rule 21
	TO	reduce by rule 21
	DO	reduce by rule 21
	IN	reduce by rule 21
	END	reduce by rule 21
	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	CARET	shift 17
	AND	reduce by rule 21
	OR	reduce by rule 21
	FUNCTION	reduce by rule 21
	VAR	reduce by rule 21
	TYPE	reduce by rule 21


	.	error


state 57:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 23)
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 23
	COMMA	reduce by rule 23
	SEMICOLON	reduce by rule 23
	RPAREN	reduce by rule 23
	RBRACK	reduce by rule 23
	RBRACE	reduce by rule 23
	THEN	reduce by rule 23
	ELSE	reduce by rule 23
	TO	reduce by rule 23
	DO	reduce by rule 23
	IN	reduce by rule 23
	END	reduce by rule 23
	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	CARET	shift 17
	AND	reduce by rule 23
	OR	reduce by rule 23
	FUNCTION	reduce by rule 23
	VAR	reduce by rule 23
	TYPE	reduce by rule 23


	.	error


state 58:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 18)
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 18
	COMMA	reduce by rule 18
	SEMICOLON	reduce by rule 18
	RPAREN	reduce by rule 18
	RBRACK	reduce by rule 18
	RBRACE	reduce by rule 18
	THEN	reduce by rule 18
	ELSE	reduce by rule 18
	TO	reduce by rule 18
	DO	reduce by rule 18
	IN	reduce by rule 18
	END	reduce by rule 18
	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	CARET	shift 17
	AND	reduce by rule 18
	OR	reduce by rule 18
	FUNCTION	reduce by rule 18
	VAR	reduce by rule 18
	TYPE	reduce by rule 18


	.	error


state 59:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 26)
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	CARET	shift 17


	.	reduce by rule 26


state 60:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 27)
	exp : exp . CARET exp 

	CARET	shift 17


	.	reduce by rule 27


state 61:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 24)
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	TIMES	shift 25
	DIVIDE	shift 24
	CARET	shift 17


	.	reduce by rule 24


state 62:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 25)
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	TIMES	shift 25
	DIVIDE	shift 24
	CARET	shift 17


	.	reduce by rule 25


state 63:

	fundecls : fundecls fundecl .  (reduce by rule 59)



	.	reduce by rule 59


state 64:

	tydecls : tydecls tydecl .  (reduce by rule 47)



	.	reduce by rule 47


state 65:

	exp : LET decls IN . seqexp_p END 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 43
	seqexp	goto 82
	seqexp_p	goto 81
	lvalue	goto 1

	.	reduce by rule 35


state 66:

	decls : decl decls .  (reduce by rule 44)



	.	reduce by rule 44


state 67:

	tydecl : TYPE ID . EQ ty 

	EQ	shift 83


	.	error


state 68:

	vardecl : VAR ID . ASSIGN exp 
	vardecl : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 85
	ASSIGN	shift 84


	.	error


state 69:

	fundecl : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundecl : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 86


	.	error


state 70:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 87
	lvalue	goto 1

	.	error


state 71:

	exp : WHILE exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 88
	lvalue	goto 1

	.	error


state 72:

	exp : IF exp THEN . exp 
	exp : IF exp THEN . exp ELSE exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 89
	lvalue	goto 1

	.	error


state 73:

	exp : LPAREN seqexp RPAREN .  (reduce by rule 13)



	.	reduce by rule 13


state 74:

	seqexp : seqexp SEMICOLON . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 90
	lvalue	goto 1

	.	error


state 75:

	lvalue_p : DOT ID . lvalue_p 

	LBRACK	shift 92
	DOT	shift 45

	lvalue_p	goto 91

	.	reduce by rule 61


state 76:

	exp : ID LBRACE recfields . RBRACE 

	RBRACE	shift 93


	.	error


state 77:

	recfields : ID . EQ exp 
	recfields : ID . EQ exp COMMA recfields 

	EQ	shift 94


	.	error


state 78:

	exp : ID LBRACK exp . RBRACK OF exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	lvalue_p : LBRACK exp . RBRACK lvalue_p 

	RBRACK	shift 95
	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	EQ	shift 23
	NEQ	shift 22
	LT	shift 21
	LE	shift 20
	GT	shift 19
	GE	shift 18
	CARET	shift 17
	AND	shift 16
	OR	shift 15


	.	error


state 79:

	exp : ID LPAREN exps . RPAREN 
	exps : exps . COMMA exp 

	COMMA	shift 97
	RPAREN	shift 96


	.	error


state 80:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	exps : exp .  (reduce by rule 31)

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	EQ	shift 23
	NEQ	shift 22
	LT	shift 21
	LE	shift 20
	GT	shift 19
	GE	shift 18
	CARET	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 31


state 81:

	exp : LET decls IN seqexp_p . END 

	END	shift 98


	.	error


state 82:

	seqexp : seqexp . SEMICOLON exp 
	seqexp_p : seqexp .  (reduce by rule 36)

	SEMICOLON	shift 74


	.	reduce by rule 36


state 83:

	tydecl : TYPE ID EQ . ty 

	ID	shift 102
	LBRACE	shift 101
	ARRAY	shift 100

	ty	goto 99

	.	error


state 84:

	vardecl : VAR ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 103
	lvalue	goto 1

	.	error


state 85:

	vardecl : VAR ID COLON . ID ASSIGN exp 

	ID	shift 104


	.	error


state 86:

	fundecl : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundecl : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 106

	tyfields	goto 105

	.	reduce by rule 51


state 87:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	TO	shift 107
	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	EQ	shift 23
	NEQ	shift 22
	LT	shift 21
	LE	shift 20
	GT	shift 19
	GE	shift 18
	CARET	shift 17
	AND	shift 16
	OR	shift 15


	.	error


state 88:

	exp : WHILE exp DO exp .  (reduce by rule 9)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 9
	COMMA	reduce by rule 9
	SEMICOLON	reduce by rule 9
	RPAREN	reduce by rule 9
	RBRACK	reduce by rule 9
	RBRACE	reduce by rule 9
	THEN	reduce by rule 9
	ELSE	reduce by rule 9
	TO	reduce by rule 9
	DO	reduce by rule 9
	IN	reduce by rule 9
	END	reduce by rule 9
	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	CARET	shift 17
	AND	reduce by rule 9
	OR	reduce by rule 9
	FUNCTION	reduce by rule 9
	VAR	reduce by rule 9
	TYPE	reduce by rule 9


	.	error


state 89:

	exp : IF exp THEN exp .  (reduce by rule 7)
	exp : IF exp THEN exp . ELSE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 7
	COMMA	reduce by rule 7
	SEMICOLON	reduce by rule 7
	RPAREN	reduce by rule 7
	RBRACK	reduce by rule 7
	RBRACE	reduce by rule 7
	THEN	reduce by rule 7
	ELSE	shift 108
	TO	reduce by rule 7
	DO	reduce by rule 7
	IN	reduce by rule 7
	END	reduce by rule 7
	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	CARET	shift 17
	AND	reduce by rule 7
	OR	reduce by rule 7
	FUNCTION	reduce by rule 7
	VAR	reduce by rule 7
	TYPE	reduce by rule 7


	.	error


state 90:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	seqexp : seqexp SEMICOLON exp .  (reduce by rule 34)

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	EQ	shift 23
	NEQ	shift 22
	LT	shift 21
	LE	shift 20
	GT	shift 19
	GE	shift 18
	CARET	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 34


state 91:

	lvalue_p : DOT ID lvalue_p .  (reduce by rule 62)



	.	reduce by rule 62


state 92:

	lvalue_p : LBRACK . exp RBRACK lvalue_p 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 109
	lvalue	goto 1

	.	error


state 93:

	exp : ID LBRACE recfields RBRACE .  (reduce by rule 14)



	.	reduce by rule 14


state 94:

	recfields : ID EQ . exp 
	recfields : ID EQ . exp COMMA recfields 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 110
	lvalue	goto 1

	.	error


state 95:

	exp : ID LBRACK exp RBRACK . OF exp 
	lvalue_p : LBRACK exp RBRACK . lvalue_p 

	LBRACK	shift 92
	DOT	shift 45
	OF	shift 112

	lvalue_p	goto 111

	.	reduce by rule 61


state 96:

	exp : ID LPAREN exps RPAREN .  (reduce by rule 15)



	.	reduce by rule 15


state 97:

	exps : exps COMMA . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 113
	lvalue	goto 1

	.	error


state 98:

	exp : LET decls IN seqexp_p END .  (reduce by rule 12)



	.	reduce by rule 12


state 99:

	tydecl : TYPE ID EQ ty .  (reduce by rule 45)



	.	reduce by rule 45


state 100:

	ty : ARRAY . OF ID 

	OF	shift 114


	.	error


state 101:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 106

	tyfields	goto 115

	.	reduce by rule 51


state 102:

	ty : ID .  (reduce by rule 48)



	.	reduce by rule 48


state 103:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	vardecl : VAR ID ASSIGN exp .  (reduce by rule 54)

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	EQ	shift 23
	NEQ	shift 22
	LT	shift 21
	LE	shift 20
	GT	shift 19
	GE	shift 18
	CARET	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 54


state 104:

	vardecl : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 116


	.	error


state 105:

	fundecl : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundecl : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 117


	.	error


state 106:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID COMMA tyfields 

	COLON	shift 118


	.	error


state 107:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 119
	lvalue	goto 1

	.	error


state 108:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 120
	lvalue	goto 1

	.	error


state 109:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	lvalue_p : LBRACK exp . RBRACK lvalue_p 

	RBRACK	shift 121
	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	EQ	shift 23
	NEQ	shift 22
	LT	shift 21
	LE	shift 20
	GT	shift 19
	GE	shift 18
	CARET	shift 17
	AND	shift 16
	OR	shift 15


	.	error


state 110:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	recfields : ID EQ exp .  (reduce by rule 38)
	recfields : ID EQ exp . COMMA recfields 

	COMMA	shift 122
	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	EQ	shift 23
	NEQ	shift 22
	LT	shift 21
	LE	shift 20
	GT	shift 19
	GE	shift 18
	CARET	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 38


state 111:

	lvalue_p : LBRACK exp RBRACK lvalue_p .  (reduce by rule 63)



	.	reduce by rule 63


state 112:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 123
	lvalue	goto 1

	.	error


state 113:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	exps : exps COMMA exp .  (reduce by rule 32)

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	EQ	shift 23
	NEQ	shift 22
	LT	shift 21
	LE	shift 20
	GT	shift 19
	GE	shift 18
	CARET	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 32


state 114:

	ty : ARRAY OF . ID 

	ID	shift 124


	.	error


state 115:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 125


	.	error


state 116:

	vardecl : VAR ID COLON ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 126
	lvalue	goto 1

	.	error


state 117:

	fundecl : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundecl : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 128
	EQ	shift 127


	.	error


state 118:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID COMMA tyfields 

	ID	shift 129


	.	error


state 119:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	DO	shift 130
	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	EQ	shift 23
	NEQ	shift 22
	LT	shift 21
	LE	shift 20
	GT	shift 19
	GE	shift 18
	CARET	shift 17
	AND	shift 16
	OR	shift 15


	.	error


state 120:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 8)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	CARET	shift 17


	.	reduce by rule 8


state 121:

	lvalue_p : LBRACK exp RBRACK . lvalue_p 

	LBRACK	shift 92
	DOT	shift 45

	lvalue_p	goto 111

	.	reduce by rule 61


state 122:

	recfields : ID EQ exp COMMA . recfields 

	ID	shift 77

	recfields	goto 131

	.	reduce by rule 37


state 123:

	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 6)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 6
	COMMA	reduce by rule 6
	SEMICOLON	reduce by rule 6
	RPAREN	reduce by rule 6
	RBRACK	reduce by rule 6
	RBRACE	reduce by rule 6
	THEN	reduce by rule 6
	ELSE	reduce by rule 6
	TO	reduce by rule 6
	DO	reduce by rule 6
	IN	reduce by rule 6
	END	reduce by rule 6
	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	CARET	shift 17
	AND	reduce by rule 6
	OR	reduce by rule 6
	FUNCTION	reduce by rule 6
	VAR	reduce by rule 6
	TYPE	reduce by rule 6


	.	error


state 124:

	ty : ARRAY OF ID .  (reduce by rule 50)



	.	reduce by rule 50


state 125:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 49)



	.	reduce by rule 49


state 126:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	vardecl : VAR ID COLON ID ASSIGN exp .  (reduce by rule 55)

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	EQ	shift 23
	NEQ	shift 22
	LT	shift 21
	LE	shift 20
	GT	shift 19
	GE	shift 18
	CARET	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 55


state 127:

	fundecl : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 132
	lvalue	goto 1

	.	error


state 128:

	fundecl : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 133


	.	error


state 129:

	tyfields : ID COLON ID .  (reduce by rule 52)
	tyfields : ID COLON ID . COMMA tyfields 

	COMMA	shift 134


	.	reduce by rule 52


state 130:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 135
	lvalue	goto 1

	.	error


state 131:

	recfields : ID EQ exp COMMA recfields .  (reduce by rule 39)



	.	reduce by rule 39


state 132:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	fundecl : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 56)

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	EQ	shift 23
	NEQ	shift 22
	LT	shift 21
	LE	shift 20
	GT	shift 19
	GE	shift 18
	CARET	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 56


state 133:

	fundecl : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 136


	.	error


state 134:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 106

	tyfields	goto 137

	.	reduce by rule 51


state 135:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 10)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 

	EOF	reduce by rule 10
	COMMA	reduce by rule 10
	SEMICOLON	reduce by rule 10
	RPAREN	reduce by rule 10
	RBRACK	reduce by rule 10
	RBRACE	reduce by rule 10
	THEN	reduce by rule 10
	ELSE	reduce by rule 10
	TO	reduce by rule 10
	DO	reduce by rule 10
	IN	reduce by rule 10
	END	reduce by rule 10
	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	CARET	shift 17
	AND	reduce by rule 10
	OR	reduce by rule 10
	FUNCTION	reduce by rule 10
	VAR	reduce by rule 10
	TYPE	reduce by rule 10


	.	error


state 136:

	fundecl : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	MINUS	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 138
	lvalue	goto 1

	.	error


state 137:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 53)



	.	reduce by rule 53


state 138:

	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . EQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . NEQ exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . CARET exp 
	fundecl : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 57)

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	EQ	shift 23
	NEQ	shift 22
	LT	shift 21
	LE	shift 20
	GT	shift 19
	GE	shift 18
	CARET	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 57


state 139:


	EOF	accept


	.	error

578 of 1100 action table entries left after compaction
105 goto table entries
